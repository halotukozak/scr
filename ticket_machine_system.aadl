package ticket_machine_system

public

with hardware, custom_types;
with SEI;

---------------------------------------------------------

process Controller
features
  ticket_stock_level: in data port custom_types::StockLevel;
  cash_level: in data port custom_types::CashLevel;
  button_pressed: in event data port custom_types::ButtonType;
  ticket_request: out event data port custom_types::TicketRequest;
  ticket_dispensed_in: in event port;
  ticket_dispensed_out: out event port;
  ticket_stock_low: out event port;
end Controller;

process implementation Controller.impl
subcomponents
  this_thread_read_levels: thread ReadLevels.impl;
  this_thread_read_buttons: thread ReadButtons.impl;

connections
  ticket_stock_level_conn: port ticket_stock_level -> this_thread_read_levels.ticket_stock_level;
  cash_level_conn: port cash_level -> this_thread_read_levels.cash_level;
  ticket_stock_low_conn: port this_thread_read_levels.ticket_stock_low -> ticket_stock_low;

  button_pressed_conn: port button_pressed -> this_thread_read_buttons.button_pressed;
  ticket_request_conn: port this_thread_read_buttons.ticket_request -> ticket_request;
--  ticket_dispensed_conn: port ticket_dispensed -> this_thread_read_buttons.ticket_dispensed;

end Controller.impl;

---------------------------------------------------------

thread ReadLevels
features
  ticket_stock_level: in data port custom_types::StockLevel;
  cash_level: in data port custom_types::CashLevel;
  ticket_stock_low: out event port;
properties
  Dispatch_Offset => 4ms;
  Deadline => 10ms;
  Period => 500ms;
  Compute_Execution_Time => 0ms..4ms;
end ReadLevels;

thread implementation ReadLevels.impl
end ReadLevels.impl;

---------------------------------------------------------

thread ReadButtons
features
  button_pressed: in event data port custom_types::ButtonType;
  ticket_request: out event data port custom_types::TicketRequest;
  ticket_dispensed: in event port;
properties
  Dispatch_Offset => 2ms;
  Deadline => 30ms;
  Period => 50ms;
  Compute_Execution_Time => 0ms..4ms;
end ReadButtons;

thread implementation ReadButtons.impl
end ReadButtons.impl;

---------------------------------------------------------

device TicketStockSensor
features
  level: out data port custom_types::StockLevel;
  bus_access: requires bus access hardware::SerialBus;
  properties
    SEI::GrossWeight => 0.1kg;
    Period => 1000ms;
    Dispatch_Protocol => Periodic;
end TicketStockSensor;

device implementation TicketStockSensor.impl
end TicketStockSensor.impl;

device CashLevelSensor
features
  level: out data port custom_types::CashLevel;
  bus_access: requires bus access hardware::SerialBus;
  properties
    SEI::GrossWeight => 0.1kg;
    Period => 1000ms;
    Dispatch_Protocol => Periodic;
end CashLevelSensor;

device implementation CashLevelSensor.impl
end CashLevelSensor.impl;

device Buttons
features
  button_pressed: out event data port custom_types::ButtonType;
  bus_access: requires bus access hardware::SerialBus;
  properties
    SEI::GrossWeight => 0.2kg;
    Dispatch_Protocol => Aperiodic;
end Buttons;

device implementation Buttons.impl
end Buttons.impl;

device Screen
features
  ticket_dispensed: in event port;
  ticket_stock_low: in event port;
  bus_access: requires bus access hardware::SerialBus;
  properties
    SEI::GrossWeight => 0.2kg;
    Dispatch_Protocol => Aperiodic;
end Screen;

device implementation Screen.impl
end Screen.impl;

system TicketVendingSystem
features
  ticket_dispensed: out event port;
  ticket_request: in event data port custom_types::TicketRequest;
  this_bus: requires bus access hardware::SerialBus;
properties
	SEI::WeightLimit => 3.0kg;	
end TicketVendingSystem;

system implementation TicketVendingSystem.impl
  subcomponents
    this_printer: device TicketPrinter.impl;
    this_cash_acceptor: device CashAcceptor.impl;
    this_controller: process TicketVendingController.impl;
    main_cpu: processor hardware::MainProcessor.impl;
    system_ram: memory hardware::Ram.impl;
    system_bus: bus hardware::SerialBus.impl;
    status_screen: device Screen.impl;

connections
  printer_connection_request: port this_controller.print_ticket -> this_printer.print_ticket;
  printer_connection_done: port this_printer.done -> this_controller.ticket_printed;
  cash_acceptor_connection_request: port this_controller.accept_cash -> this_cash_acceptor.accept_cash;
  cash_acceptor_connection_done: port this_cash_acceptor.done -> this_controller.cash_accepted;
  ticket_request_connection: port ticket_request -> this_controller.ticket_request;
  ticket_dispensed_connection: port this_controller.ticket_dispensed -> ticket_dispensed;

  bus_printer: bus access this_bus -> this_printer.bus_access;
  bus_cash_acceptor: bus access this_bus -> this_cash_acceptor.bus_access;
end TicketVendingSystem.impl;

process TicketVendingController
features
  ticket_request: in event data port custom_types::TicketRequest;
  print_ticket: out event data port custom_types::TicketInfo;
  ticket_printed: in event port;
  accept_cash: out event data port custom_types::CashAmount;
  cash_accepted: in event port;
  ticket_dispensed: out event port;
end TicketVendingController;

process implementation TicketVendingController.impl
	subcomponents
  this_thread_vend_ticket: thread VendTicket.impl;
connections
  ticket_request_connection: port ticket_request -> this_thread_vend_ticket.ticket_request;
  print_ticket_connection: port this_thread_vend_ticket.print_ticket -> print_ticket;
  ticket_printed_connection: port ticket_printed -> this_thread_vend_ticket.ticket_printed;
  accept_cash_connection: port this_thread_vend_ticket.accept_cash -> accept_cash;
  cash_accepted_connection: port cash_accepted -> this_thread_vend_ticket.cash_accepted;
  ticket_dispensed_connection: port this_thread_vend_ticket.ticket_dispensed -> ticket_dispensed;
end TicketVendingController.impl;

thread VendTicket
features
  ticket_request: in event data port custom_types::TicketRequest;
  print_ticket: out event data port custom_types::TicketInfo;
  ticket_printed: in event port;
  accept_cash: out event data port custom_types::CashAmount;
  cash_accepted: in event port;
  ticket_dispensed: out event port;
properties
  Dispatch_Offset => 2ms;
  Deadline => 400ms;
  Period => 100ms;
  Compute_Execution_Time => 10ms..20ms;
end VendTicket;

thread implementation VendTicket.impl
end VendTicket.impl;

device TicketPrinter
features
  print_ticket: in event data port custom_types::TicketInfo;
  done: out event port;
  bus_access: requires bus access hardware::SerialBus;
  properties
    SEI::GrossWeight => 1.0kg;
    Dispatch_Protocol => Aperiodic;
end TicketPrinter;

device implementation TicketPrinter.impl
end TicketPrinter.impl;

device CashAcceptor
features
  accept_cash: in event data port custom_types::CashAmount;
  done: out event port;
  bus_access: requires bus access hardware::SerialBus;
  properties
    SEI::GrossWeight => 1.0kg;
    Dispatch_Protocol => Aperiodic;
end CashAcceptor;

device implementation CashAcceptor.impl
end CashAcceptor.impl;

end ticket_machine_system;
